/**
 * Autogenerated by Avro
 *
 * <p>DO NOT EDIT DIRECTLY
 */
package com.snowflake.schema;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class OneGTable extends org.apache.avro.specific.SpecificRecordBase
    implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4463618672540577691L;
  public static final org.apache.avro.Schema SCHEMA$ =
      new org.apache.avro.Schema.Parser()
          .parse(
              "{\"type\":\"record\",\"name\":\"OneGTable\",\"namespace\":\"com.snowflake.schema\",\"fields\":[{\"name\":\"C_CUSTKEY\",\"type\":\"long\"},{\"name\":\"C_NAME\",\"type\":\"string\"},{\"name\":\"C_ADDRESS\",\"type\":\"string\"},{\"name\":\"C_NATIONKEY\",\"type\":\"long\"},{\"name\":\"C_PHONE\",\"type\":\"string\"},{\"name\":\"C_ACCTBAL\",\"type\":\"double\"},{\"name\":\"C_MKTSEGMENT\",\"type\":\"string\"},{\"name\":\"C_COMMENT\",\"type\":\"string\"}]}");

  public static org.apache.avro.Schema getClassSchema() {
    return SCHEMA$;
  }

  @Deprecated public long C_CUSTKEY;
  @Deprecated public java.lang.CharSequence C_NAME;
  @Deprecated public java.lang.CharSequence C_ADDRESS;
  @Deprecated public long C_NATIONKEY;
  @Deprecated public java.lang.CharSequence C_PHONE;
  @Deprecated public double C_ACCTBAL;
  @Deprecated public java.lang.CharSequence C_MKTSEGMENT;
  @Deprecated public java.lang.CharSequence C_COMMENT;

  /**
   * Default constructor. Note that this does not initialize fields to their default values from the
   * schema. If that is desired then one should use <code>newBuilder()</code>.
   */
  public OneGTable() {}

  /**
   * All-args constructor.
   *
   * @param C_CUSTKEY The new value for C_CUSTKEY
   * @param C_NAME The new value for C_NAME
   * @param C_ADDRESS The new value for C_ADDRESS
   * @param C_NATIONKEY The new value for C_NATIONKEY
   * @param C_PHONE The new value for C_PHONE
   * @param C_ACCTBAL The new value for C_ACCTBAL
   * @param C_MKTSEGMENT The new value for C_MKTSEGMENT
   * @param C_COMMENT The new value for C_COMMENT
   */
  public OneGTable(
      java.lang.Long C_CUSTKEY,
      java.lang.CharSequence C_NAME,
      java.lang.CharSequence C_ADDRESS,
      java.lang.Long C_NATIONKEY,
      java.lang.CharSequence C_PHONE,
      java.lang.Double C_ACCTBAL,
      java.lang.CharSequence C_MKTSEGMENT,
      java.lang.CharSequence C_COMMENT) {
    this.C_CUSTKEY = C_CUSTKEY;
    this.C_NAME = C_NAME;
    this.C_ADDRESS = C_ADDRESS;
    this.C_NATIONKEY = C_NATIONKEY;
    this.C_PHONE = C_PHONE;
    this.C_ACCTBAL = C_ACCTBAL;
    this.C_MKTSEGMENT = C_MKTSEGMENT;
    this.C_COMMENT = C_COMMENT;
  }

  public org.apache.avro.Schema getSchema() {
    return SCHEMA$;
  }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
      case 0:
        return C_CUSTKEY;
      case 1:
        return C_NAME;
      case 2:
        return C_ADDRESS;
      case 3:
        return C_NATIONKEY;
      case 4:
        return C_PHONE;
      case 5:
        return C_ACCTBAL;
      case 6:
        return C_MKTSEGMENT;
      case 7:
        return C_COMMENT;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value = "unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
      case 0:
        C_CUSTKEY = (java.lang.Long) value$;
        break;
      case 1:
        C_NAME = (java.lang.CharSequence) value$;
        break;
      case 2:
        C_ADDRESS = (java.lang.CharSequence) value$;
        break;
      case 3:
        C_NATIONKEY = (java.lang.Long) value$;
        break;
      case 4:
        C_PHONE = (java.lang.CharSequence) value$;
        break;
      case 5:
        C_ACCTBAL = (java.lang.Double) value$;
        break;
      case 6:
        C_MKTSEGMENT = (java.lang.CharSequence) value$;
        break;
      case 7:
        C_COMMENT = (java.lang.CharSequence) value$;
        break;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'C_CUSTKEY' field.
   *
   * @return The value of the 'C_CUSTKEY' field.
   */
  public java.lang.Long getCCUSTKEY() {
    return C_CUSTKEY;
  }

  /**
   * Sets the value of the 'C_CUSTKEY' field.
   *
   * @param value the value to set.
   */
  public void setCCUSTKEY(java.lang.Long value) {
    this.C_CUSTKEY = value;
  }

  /**
   * Gets the value of the 'C_NAME' field.
   *
   * @return The value of the 'C_NAME' field.
   */
  public java.lang.CharSequence getCNAME() {
    return C_NAME;
  }

  /**
   * Sets the value of the 'C_NAME' field.
   *
   * @param value the value to set.
   */
  public void setCNAME(java.lang.CharSequence value) {
    this.C_NAME = value;
  }

  /**
   * Gets the value of the 'C_ADDRESS' field.
   *
   * @return The value of the 'C_ADDRESS' field.
   */
  public java.lang.CharSequence getCADDRESS() {
    return C_ADDRESS;
  }

  /**
   * Sets the value of the 'C_ADDRESS' field.
   *
   * @param value the value to set.
   */
  public void setCADDRESS(java.lang.CharSequence value) {
    this.C_ADDRESS = value;
  }

  /**
   * Gets the value of the 'C_NATIONKEY' field.
   *
   * @return The value of the 'C_NATIONKEY' field.
   */
  public java.lang.Long getCNATIONKEY() {
    return C_NATIONKEY;
  }

  /**
   * Sets the value of the 'C_NATIONKEY' field.
   *
   * @param value the value to set.
   */
  public void setCNATIONKEY(java.lang.Long value) {
    this.C_NATIONKEY = value;
  }

  /**
   * Gets the value of the 'C_PHONE' field.
   *
   * @return The value of the 'C_PHONE' field.
   */
  public java.lang.CharSequence getCPHONE() {
    return C_PHONE;
  }

  /**
   * Sets the value of the 'C_PHONE' field.
   *
   * @param value the value to set.
   */
  public void setCPHONE(java.lang.CharSequence value) {
    this.C_PHONE = value;
  }

  /**
   * Gets the value of the 'C_ACCTBAL' field.
   *
   * @return The value of the 'C_ACCTBAL' field.
   */
  public java.lang.Double getCACCTBAL() {
    return C_ACCTBAL;
  }

  /**
   * Sets the value of the 'C_ACCTBAL' field.
   *
   * @param value the value to set.
   */
  public void setCACCTBAL(java.lang.Double value) {
    this.C_ACCTBAL = value;
  }

  /**
   * Gets the value of the 'C_MKTSEGMENT' field.
   *
   * @return The value of the 'C_MKTSEGMENT' field.
   */
  public java.lang.CharSequence getCMKTSEGMENT() {
    return C_MKTSEGMENT;
  }

  /**
   * Sets the value of the 'C_MKTSEGMENT' field.
   *
   * @param value the value to set.
   */
  public void setCMKTSEGMENT(java.lang.CharSequence value) {
    this.C_MKTSEGMENT = value;
  }

  /**
   * Gets the value of the 'C_COMMENT' field.
   *
   * @return The value of the 'C_COMMENT' field.
   */
  public java.lang.CharSequence getCCOMMENT() {
    return C_COMMENT;
  }

  /**
   * Sets the value of the 'C_COMMENT' field.
   *
   * @param value the value to set.
   */
  public void setCCOMMENT(java.lang.CharSequence value) {
    this.C_COMMENT = value;
  }

  /**
   * Creates a new OneGTable RecordBuilder.
   *
   * @return A new OneGTable RecordBuilder
   */
  public static com.snowflake.schema.OneGTable.Builder newBuilder() {
    return new com.snowflake.schema.OneGTable.Builder();
  }

  /**
   * Creates a new OneGTable RecordBuilder by copying an existing Builder.
   *
   * @param other The existing builder to copy.
   * @return A new OneGTable RecordBuilder
   */
  public static com.snowflake.schema.OneGTable.Builder newBuilder(
      com.snowflake.schema.OneGTable.Builder other) {
    return new com.snowflake.schema.OneGTable.Builder(other);
  }

  /**
   * Creates a new OneGTable RecordBuilder by copying an existing OneGTable instance.
   *
   * @param other The existing instance to copy.
   * @return A new OneGTable RecordBuilder
   */
  public static com.snowflake.schema.OneGTable.Builder newBuilder(
      com.snowflake.schema.OneGTable other) {
    return new com.snowflake.schema.OneGTable.Builder(other);
  }

  /** RecordBuilder for OneGTable instances. */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OneGTable>
      implements org.apache.avro.data.RecordBuilder<OneGTable> {

    private long C_CUSTKEY;
    private java.lang.CharSequence C_NAME;
    private java.lang.CharSequence C_ADDRESS;
    private long C_NATIONKEY;
    private java.lang.CharSequence C_PHONE;
    private double C_ACCTBAL;
    private java.lang.CharSequence C_MKTSEGMENT;
    private java.lang.CharSequence C_COMMENT;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     *
     * @param other The existing Builder to copy.
     */
    private Builder(com.snowflake.schema.OneGTable.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.C_CUSTKEY)) {
        this.C_CUSTKEY = data().deepCopy(fields()[0].schema(), other.C_CUSTKEY);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.C_NAME)) {
        this.C_NAME = data().deepCopy(fields()[1].schema(), other.C_NAME);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.C_ADDRESS)) {
        this.C_ADDRESS = data().deepCopy(fields()[2].schema(), other.C_ADDRESS);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.C_NATIONKEY)) {
        this.C_NATIONKEY = data().deepCopy(fields()[3].schema(), other.C_NATIONKEY);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.C_PHONE)) {
        this.C_PHONE = data().deepCopy(fields()[4].schema(), other.C_PHONE);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.C_ACCTBAL)) {
        this.C_ACCTBAL = data().deepCopy(fields()[5].schema(), other.C_ACCTBAL);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.C_MKTSEGMENT)) {
        this.C_MKTSEGMENT = data().deepCopy(fields()[6].schema(), other.C_MKTSEGMENT);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.C_COMMENT)) {
        this.C_COMMENT = data().deepCopy(fields()[7].schema(), other.C_COMMENT);
        fieldSetFlags()[7] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing OneGTable instance
     *
     * @param other The existing instance to copy.
     */
    private Builder(com.snowflake.schema.OneGTable other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.C_CUSTKEY)) {
        this.C_CUSTKEY = data().deepCopy(fields()[0].schema(), other.C_CUSTKEY);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.C_NAME)) {
        this.C_NAME = data().deepCopy(fields()[1].schema(), other.C_NAME);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.C_ADDRESS)) {
        this.C_ADDRESS = data().deepCopy(fields()[2].schema(), other.C_ADDRESS);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.C_NATIONKEY)) {
        this.C_NATIONKEY = data().deepCopy(fields()[3].schema(), other.C_NATIONKEY);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.C_PHONE)) {
        this.C_PHONE = data().deepCopy(fields()[4].schema(), other.C_PHONE);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.C_ACCTBAL)) {
        this.C_ACCTBAL = data().deepCopy(fields()[5].schema(), other.C_ACCTBAL);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.C_MKTSEGMENT)) {
        this.C_MKTSEGMENT = data().deepCopy(fields()[6].schema(), other.C_MKTSEGMENT);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.C_COMMENT)) {
        this.C_COMMENT = data().deepCopy(fields()[7].schema(), other.C_COMMENT);
        fieldSetFlags()[7] = true;
      }
    }

    /**
     * Gets the value of the 'C_CUSTKEY' field.
     *
     * @return The value.
     */
    public java.lang.Long getCCUSTKEY() {
      return C_CUSTKEY;
    }

    /**
     * Sets the value of the 'C_CUSTKEY' field.
     *
     * @param value The value of 'C_CUSTKEY'.
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder setCCUSTKEY(long value) {
      validate(fields()[0], value);
      this.C_CUSTKEY = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
     * Checks whether the 'C_CUSTKEY' field has been set.
     *
     * @return True if the 'C_CUSTKEY' field has been set, false otherwise.
     */
    public boolean hasCCUSTKEY() {
      return fieldSetFlags()[0];
    }

    /**
     * Clears the value of the 'C_CUSTKEY' field.
     *
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder clearCCUSTKEY() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
     * Gets the value of the 'C_NAME' field.
     *
     * @return The value.
     */
    public java.lang.CharSequence getCNAME() {
      return C_NAME;
    }

    /**
     * Sets the value of the 'C_NAME' field.
     *
     * @param value The value of 'C_NAME'.
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder setCNAME(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.C_NAME = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
     * Checks whether the 'C_NAME' field has been set.
     *
     * @return True if the 'C_NAME' field has been set, false otherwise.
     */
    public boolean hasCNAME() {
      return fieldSetFlags()[1];
    }

    /**
     * Clears the value of the 'C_NAME' field.
     *
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder clearCNAME() {
      C_NAME = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
     * Gets the value of the 'C_ADDRESS' field.
     *
     * @return The value.
     */
    public java.lang.CharSequence getCADDRESS() {
      return C_ADDRESS;
    }

    /**
     * Sets the value of the 'C_ADDRESS' field.
     *
     * @param value The value of 'C_ADDRESS'.
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder setCADDRESS(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.C_ADDRESS = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
     * Checks whether the 'C_ADDRESS' field has been set.
     *
     * @return True if the 'C_ADDRESS' field has been set, false otherwise.
     */
    public boolean hasCADDRESS() {
      return fieldSetFlags()[2];
    }

    /**
     * Clears the value of the 'C_ADDRESS' field.
     *
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder clearCADDRESS() {
      C_ADDRESS = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
     * Gets the value of the 'C_NATIONKEY' field.
     *
     * @return The value.
     */
    public java.lang.Long getCNATIONKEY() {
      return C_NATIONKEY;
    }

    /**
     * Sets the value of the 'C_NATIONKEY' field.
     *
     * @param value The value of 'C_NATIONKEY'.
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder setCNATIONKEY(long value) {
      validate(fields()[3], value);
      this.C_NATIONKEY = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
     * Checks whether the 'C_NATIONKEY' field has been set.
     *
     * @return True if the 'C_NATIONKEY' field has been set, false otherwise.
     */
    public boolean hasCNATIONKEY() {
      return fieldSetFlags()[3];
    }

    /**
     * Clears the value of the 'C_NATIONKEY' field.
     *
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder clearCNATIONKEY() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
     * Gets the value of the 'C_PHONE' field.
     *
     * @return The value.
     */
    public java.lang.CharSequence getCPHONE() {
      return C_PHONE;
    }

    /**
     * Sets the value of the 'C_PHONE' field.
     *
     * @param value The value of 'C_PHONE'.
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder setCPHONE(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.C_PHONE = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
     * Checks whether the 'C_PHONE' field has been set.
     *
     * @return True if the 'C_PHONE' field has been set, false otherwise.
     */
    public boolean hasCPHONE() {
      return fieldSetFlags()[4];
    }

    /**
     * Clears the value of the 'C_PHONE' field.
     *
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder clearCPHONE() {
      C_PHONE = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
     * Gets the value of the 'C_ACCTBAL' field.
     *
     * @return The value.
     */
    public java.lang.Double getCACCTBAL() {
      return C_ACCTBAL;
    }

    /**
     * Sets the value of the 'C_ACCTBAL' field.
     *
     * @param value The value of 'C_ACCTBAL'.
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder setCACCTBAL(double value) {
      validate(fields()[5], value);
      this.C_ACCTBAL = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
     * Checks whether the 'C_ACCTBAL' field has been set.
     *
     * @return True if the 'C_ACCTBAL' field has been set, false otherwise.
     */
    public boolean hasCACCTBAL() {
      return fieldSetFlags()[5];
    }

    /**
     * Clears the value of the 'C_ACCTBAL' field.
     *
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder clearCACCTBAL() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
     * Gets the value of the 'C_MKTSEGMENT' field.
     *
     * @return The value.
     */
    public java.lang.CharSequence getCMKTSEGMENT() {
      return C_MKTSEGMENT;
    }

    /**
     * Sets the value of the 'C_MKTSEGMENT' field.
     *
     * @param value The value of 'C_MKTSEGMENT'.
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder setCMKTSEGMENT(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.C_MKTSEGMENT = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
     * Checks whether the 'C_MKTSEGMENT' field has been set.
     *
     * @return True if the 'C_MKTSEGMENT' field has been set, false otherwise.
     */
    public boolean hasCMKTSEGMENT() {
      return fieldSetFlags()[6];
    }

    /**
     * Clears the value of the 'C_MKTSEGMENT' field.
     *
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder clearCMKTSEGMENT() {
      C_MKTSEGMENT = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
     * Gets the value of the 'C_COMMENT' field.
     *
     * @return The value.
     */
    public java.lang.CharSequence getCCOMMENT() {
      return C_COMMENT;
    }

    /**
     * Sets the value of the 'C_COMMENT' field.
     *
     * @param value The value of 'C_COMMENT'.
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder setCCOMMENT(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.C_COMMENT = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
     * Checks whether the 'C_COMMENT' field has been set.
     *
     * @return True if the 'C_COMMENT' field has been set, false otherwise.
     */
    public boolean hasCCOMMENT() {
      return fieldSetFlags()[7];
    }

    /**
     * Clears the value of the 'C_COMMENT' field.
     *
     * @return This builder.
     */
    public com.snowflake.schema.OneGTable.Builder clearCCOMMENT() {
      C_COMMENT = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public OneGTable build() {
      try {
        OneGTable record = new OneGTable();
        record.C_CUSTKEY =
            fieldSetFlags()[0] ? this.C_CUSTKEY : (java.lang.Long) defaultValue(fields()[0]);
        record.C_NAME =
            fieldSetFlags()[1] ? this.C_NAME : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.C_ADDRESS =
            fieldSetFlags()[2]
                ? this.C_ADDRESS
                : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.C_NATIONKEY =
            fieldSetFlags()[3] ? this.C_NATIONKEY : (java.lang.Long) defaultValue(fields()[3]);
        record.C_PHONE =
            fieldSetFlags()[4] ? this.C_PHONE : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.C_ACCTBAL =
            fieldSetFlags()[5] ? this.C_ACCTBAL : (java.lang.Double) defaultValue(fields()[5]);
        record.C_MKTSEGMENT =
            fieldSetFlags()[6]
                ? this.C_MKTSEGMENT
                : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.C_COMMENT =
            fieldSetFlags()[7]
                ? this.C_COMMENT
                : (java.lang.CharSequence) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter WRITER$ =
      new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override
  public void writeExternal(java.io.ObjectOutput out) throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader READER$ =
      new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override
  public void readExternal(java.io.ObjectInput in) throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }
}
