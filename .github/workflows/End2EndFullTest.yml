name: Kafka Connector End2End Test

on:
  schedule:
    - cron:  '0 8 * * *'

jobs:
  build:
    strategy:
      matrix:
        versions: [0, 2, 4, 5]
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: "Install Java 8"
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.6'
        architecture: 'x64'
    - name: Decrypt profile.json
      run: ./.github/scripts/decrypt_secret.sh
      env:
        SNOWFLAKE_TEST_PROFILE_SECRET: ${{ secrets.SNOWFLAKE_TEST_PROFILE_SECRET }}
    - name: Restore Maven Cache
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Install Dependency
      run: |
        pip3 install --upgrade setuptools
        pip3 install "confluent-kafka[avro]"
        pip3 install avro-python3
        pip3 install --upgrade snowflake-connector-python
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
        sudo apt-get -y install jq
    - name: Start Kubernetes Cluster
      env:
        CHANGE_MINIKUBE_NONE_USER: true
      run: |
        sudo apt-get -y install conntrack
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/v1.9.1/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
        sudo minikube start --vm-driver=none
        sudo chown -R $USER $HOME/.kube $HOME/.minikube || true
        minikube update-context
    
    - name: Build with Unit and Integration Test
      env:
        JACOCO_COVERAGE: true
        SNOWFLAKE_CREDENTIAL_FILE: "../profile.json"
        SHELL: "/bin/bash"
      run: |
        cd test
        ./build_image.sh 5.${{ matrix.versions }}.0 ../../snowflake-kafka-connector

    - name: End to End Test of Confluent Platform
      env:
        SNOWFLAKE_CREDENTIAL_FILE: "../profile.json"
      run: |
        cd test
        ./run_test.sh ./helm_values/snow_values_5.${{ matrix.versions }}.yaml

    - name: End to End Test of Apache Plarform
      env:
        SNOWFLAKE_CREDENTIAL_FILE: "../profile.json"
      run: |
        cd test
        ./run_test_apache.sh 2.${{ matrix.versions }}.0 ./apache_properties

    - name: Code Coverage
      uses: codecov/codecov-action@v1
